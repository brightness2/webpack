# FOUR

## 修改文件
- webpack.config.js
const path = require("path");

module.exports = {
  entry: "./src/index.js",
  output: {
    // filename: "main.js",
    filename: "bundle.js",
    path: path.resolve(__dirname, "dist"),
  },
};

## 加载css
为了在 JavaScript 模块中 import 一个 CSS 文件，你需要安装 style-loader 和 css-loader，并在 module 配置 中添加这些 loader：

npm install --save-dev style-loader css-loader

- 修改 webpack.config.js
const path = require("path");

module.exports = {
  entry: "./src/index.js",
  output: {
    // filename: "main.js",
    filename: "bundle.js",
    path: path.resolve(__dirname, "dist"),
  },
  module: {
    rules: [
      {
        test: /\.css$/i, //正则，匹配css文件
        use: ["style-loader", "css-loader"], //对应使用的loader
      },
    ],
  },
};

## 添加 style.css文件
- src/style.css
.hello {
  color: red;
}

- src/index.js
import _ from "lodash";
import "./style.css";//引入css
function component() {
  const element = document.createElement("div");
  // lodash 在当前 script 中使用 import 引入
  element.innerHTML = _.join(["Hello", "webpack"], " ");
  return element;
}
document.body.appendChild(component());

## 加载image 图像
使用内置的 Asset Modules，我们可以轻松地将这些内容混入我们的系统中：
- webpack.config.js
const path = require("path");

module.exports = {
  entry: "./src/index.js",
  output: {
    // filename: "main.js",
    filename: "bundle.js",
    path: path.resolve(__dirname, "dist"),
  },
  module: {
    rules: [
      {
        test: /\.css$/i, //正则，匹配css文件
        use: ["style-loader", "css-loader"], //对应使用的loader，注意顺序
      },
      {
        test: /\.(png|svg|jpg|jpeg|gif)$/i, //加载的图片
        type: "asset/resource",
      },
    ],
  },
};

## 增加图片 
src/1.jpg

- src/index.js
import _ from "lodash";
import "./style.css";
import img from "./1.jpg";
function component() {
  const element = document.createElement("div");
  // lodash 在当前 script 中使用 import 引入
  element.innerHTML = _.join(["Hello", "webpack"], " ");
  element.classList.add("hello");

  //将图片添加到div中
  const myImg = new Image();
  myImg.src = img;
  element.appendChild(myImg);

  return element;
}
document.body.appendChild(component());


## 加载字体

- webpack.config.js
const path = require("path");

module.exports = {
  entry: "./src/index.js",
  output: {
    // filename: "main.js",
    filename: "bundle.js",
    path: path.resolve(__dirname, "dist"),
  },
  module: {
    rules: [
      {
        test: /\.css$/i, //正则，匹配css文件
        use: ["style-loader", "css-loader"], //对应使用的loader，注意顺序
      },
      {
        test: /\.(png|svg|jpg|jpeg|gif)$/i, //加载的图片
        type: "asset/resource",
      },
      {
        test: /\.(woff|woff2|eot|ttf|otf)$/i, //加载字体
        type: "asset/resource",
      },
    ],
  },
};

## 添加字体文件
src/iconfont.eot

## css 文件使用字体
src/style.css
@font-face {
    font-family: 'MyFont';
    src:url('./iconfont.eot') format('eot');
    font-weight: 600;
    font-style: italic;
}
.hello {
    color: red;
    font-family: 'MyFont';
}
