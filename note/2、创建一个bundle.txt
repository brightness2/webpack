# TWO

##

首先，我们稍微调整下目录结构，创建分发代码(./dist)文件夹用于存放分发代码，源代码(./src)文件夹仍存放源代码。源代码是指用于书写和编辑的代码。分发代码是指在构建过程中，经过最小化和优化后产生的输出结果，最终将在浏览器中加载。调整后目录结构如下：

webpack-demo
|- package.json
|- /dist
|--- index.html
|- /src
|--- index.js

## 安装 lodash 依赖

npm install --save lodash

## 现在，在我们的 script 中 import lodash：

- src/index.js
  import _ from "lodash";
  function component() {
  const element = document.createElement("div");
  // lodash 在当前 script 中使用 import 引入
  element.innerHTML = _.join(["Hello", "webpack"], " ");
  return element;
  }
  document.body.appendChild(component());

- dist/index.html
  <!DOCTYPE html>
  <html>
  <head>
      <meta charset="UTF-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Brightness</title>
  </head>
  <body>
      
      <script src="./main.js"></script>
  </body>
  </html>

## 运行 输出 main.js

npx webpack
